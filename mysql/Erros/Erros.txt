1.	‚ùå Erro ao conectar no MongoDB: localhost:27017: [Errno 111] Connection refused
üß† O que isso significa?
O pyService (rodando dentro de um container Docker) tentou acessar localhost:27017.
Mas dentro de um container, localhost n√£o √© o host da sua m√°quina f√≠sica.
localhost dentro do container aponta para o pr√≥prio container ‚Äî e como o MongoDB n√£o est√° rodando ali dentro, ele n√£o vai encontrar
nada nesse endere√ßo.
Resultado: Connection refused (ningu√©m est√° ouvindo na porta 27017 dentro do container).

Como resolver?

Substitua:
MONGO_URI = "mongodb://localhost:27017"
Por algo como:
MONGO_URI = "mongodb://host.docker.internal:27017"

üß≠ Por que host.docker.internal?
Essa √© uma forma padr√£o do Docker (no Windows/macOS) se comunicar com o host real da m√°quina.
Ent√£o, quando voc√™ diz:
mongodb://host.docker.internal:27017
Voc√™ est√° dizendo:
‚ÄúEi container, fale com o MongoDB que est√° rodando no host da minha m√°quina!‚Äù

‚úèÔ∏è Resumo:
Dentro de um container, localhost √© o pr√≥prio container.
Para acessar algo rodando na m√°quina f√≠sica (host) de fora do container:
Use host.docker.internal (no Windows/macOS).
Use o IP da m√°quina, se preferir.
O erro Connection refused indica que n√£o tem ningu√©m escutando naquela porta/endere√ßo.
O erro Name or service not known indica que o nome do host n√£o foi reconhecido (como quando voc√™ tenta usar "mongodb" sem esse nome
estar definido no Docker Compose ou DNS).

****************************************************************

2.	‚ùå Erro ao conectar no MongoDB: mongodb:27017: [Errno -2] Name or service not known
Ou seja, o nome mongodb n√£o est√° sendo resolvido dentro do container do pyService, o que indica que:
üîç Causas poss√≠veis
O nome mongodb n√£o corresponde ao nome real do servi√ßo no docker-compose.yml.
Os containers n√£o est√£o na mesma rede Docker.
Voc√™ est√° rodando o MongoDB fora do Docker (ex: local na m√°quina), mas colocou mongodb:27017 mesmo assim.

